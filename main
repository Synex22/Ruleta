#include <stdio.h>
#include <stdlib.h>
#include <iostream>
using namespace std;
#include <fstream>
#include <conio2.h>
#include <string.h>

typedef struct
{
    int numero;
    int repeticiones;
} tipoNumero;

#define OPCIONES 6

/*prototipos*/
void actLista(tipoNumero[],int);
void printLista(tipoNumero[],int);
void verLista(tipoNumero[]);
void numCercanos(tipoNumero[]);
void guardar(tipoNumero[],int);
void borrar(tipoNumero[]);
void zonas(tipoNumero[]);
int elegirOpcion(int,string[],int,int);
void leerFichero(tipoNumero[],int);
int pedirClave();

int main()
{
    int opc,sitio;     /*sitio=1 será Montijo y sitio=2 será Badajoz*/
    tipoNumero lista[37];
    char confirm[7];
    string casinos[]={"Montijo","Badajoz"};
    string menu[]={"Salir","Numeros cercanos","Lista / introducir numeros","Zona mas repetida","Borrar datos","Cambiar casino"};

    opc=pedirClave();
    if (opc!=1)
    {
        sitio=elegirOpcion(2,casinos,1,0);
        leerFichero(lista,sitio);
    }
    system("cls");
    while (opc!=1)
    {
        opc=elegirOpcion(OPCIONES,menu,2,sitio);
        system("cls");
        switch(opc)
        {
            case 2:
                {
                    numCercanos(lista);
                    break;
                }
            case 3:
                {
                    verLista(lista);
                    break;
                }
            case 4:
                {
                    zonas(lista);
                    break;
                }
            case 5:
                {
                    cout<<"Se perderan todos los numeros introducidos hasta el momento"<<endl;
                    cout<<"Escribe \"BORRAR\" para confirmar: ";
                    cin>>confirm;
                    cout<<endl;
                    if(strcmp(confirm,"BORRAR")==0)     /*strcmp() compara dos cadenas de caracteres y devuelve 0 si son iguales (librería string.h)*/
                    {
                        borrar(lista);
                        cout<<"Todas las repeticiones de ";
                        if (sitio==1)
                            cout<<"Montijo";
                        else
                            cout<<"Badajoz";
                        cout<<" han sido puestas a 0";
                    }
                    else
                        cout<<"Los numeros permanecen guardados";
                    cout<<endl<<endl;
                    system("PAUSE");
                    break;
                }
            case 6:
                {
                    sitio=elegirOpcion(2,casinos,1,0);
                    system("cls");
                    leerFichero(lista,sitio);
                }
        }
        guardar(lista,sitio);
    }
   return 0;
}

void actLista(tipoNumero lista[],int n)
{
    int i;
    tipoNumero aux;
    i=-1;

    do
    {
        i++;
        if (lista[i].numero==n) lista[i].repeticiones++;
    }while (lista[i].numero!=n);
    aux=lista[i];
    while (aux.repeticiones>lista[i-1].repeticiones && i>0)
    {
       lista[i]=lista[i-1];
       i--;
    }
    lista[i]=aux;
}

void printLista(tipoNumero lista[],int n)
{
    int i;

    for (i=0;i<n;i++)
            printf("Numero: %2d -------------- %2d veces\n",lista[i].numero,lista[i].repeticiones);
}


void printMenu(int n,int opc, string m[],int cabecera,int casino) /*muestra en pantalla un menú*/
{
    int i;
    system("cls");
    if (cabecera==1)
         cout<<"Elige el casino: "<<endl;
    else
        if (casino==1)
       {
            cout<<"**********************************"<<endl;
            cout<<"|\\/\\/\\/\\  Ruleta Montijo  \\/\\/\\/\\|"<<endl;
            cout<<"**********************************"<<endl;
       }
       else
       {
            cout<<"**********************************"<<endl;
            cout<<"|\\/\\/\\/\\  Ruleta Badajoz  \\/\\/\\/\\|"<<endl;
            cout<<"**********************************"<<endl;
       }
    for (i=0;i<opc;i++)
    {
        if (i+1==n)
        {
            textbackground(WHITE);
            textcolor(BLACK);
        }
        cout<<endl<<"- "<<m[i]<<endl;
        textbackground(BLACK);
        textcolor(WHITE);

    }
}

/*prototipos*/
int entradaNum();
int sumaZona(tipoNumero[],int,int);

void verLista(tipoNumero lista[])   /*Muestra una lista ordenada segun las repeticiones y permite la introduccion de nuevos numeros*/
{
    int num,n;
    printf("Cantidad de numeros mostrados: ");
    scanf("%d",&n);
    while (n<0 || n>37)
    {
        printf("Numero incorrecto, introduce otro (0-37): ");
        scanf("%d",&n);
    }

    do
   {
        system("cls");
        printLista(lista,n);
        cout<<endl<<"Hay "<<sumaZona(lista,37,0)<<" numeros almacenados"<<endl<<endl;
        printf("Para dejar de introducir numeros pulsa ESCAPE\n");
        printf("Introduce un numero: ");
        num=entradaNum();
        while ((num<0 || num>36) && num!=-1 && num!=-2)     /*num=-1 si se pulsó ESCAPE y num=-2 si se pulsó RETROCESO*/
        {
            printf("\nNumero incorrecto, escribe otro (0-36): ");
            num=entradaNum();
        }
        if (num!=-1 && num!=-2)
            actLista(lista,num);
   } while (num!=-1);
}

/*prototipos*/
int buscarPosList(tipoNumero[],int);
int buscarPosOrd(int);
int sumaZona(tipoNumero[],int,int);

void numCercanos(tipoNumero lista[])   /*Muestra x numeros ordenados cercanos a un numero n*/
{
    int orden[] = {0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26};
    int n,i,pos,posList,cant,aux,seguir;
    i=0;
    pos=0;
    seguir=0;
    while (seguir!=27)
    {
        printf("Numero: ");
        scanf("%d",&n);
        while(n<0 || n>36)
        {
            printf("Numero incorrecto, escribe otro: ");
            scanf("%d",&n);
        }

        printf("Mostrar a cada lado: ");
        scanf("%d",&cant);
        while(cant<0 || cant>18)
        {
            printf("Numero incorrecto, escribe otro (0-19): ");
            scanf("%d",&cant);
        }
        printf("\n");

        pos=buscarPosOrd(n);

        for (i=0;i<cant;i++)
        {
            aux=pos-(cant-i);
            if (aux<0)
            {
                aux=37+aux;
            }
            printf("Numero: %2d -------------- ",orden[aux]);
            posList=buscarPosList(lista,orden[aux]);
            printf("%2d veces\n",lista[posList].repeticiones);
        }

        printf("\nNumero: %2d -------------- ",orden[pos]);
        posList=buscarPosList(lista,orden[pos]);
        printf("%2d veces\n\n",lista[posList].repeticiones);
        for (i=1;i<cant+1;i++)
        {
            aux=pos+i;
            if (aux>36)
            {
                aux=aux-37;
            }
            printf("Numero: %2d -------------- ",orden[aux]);
            posList=buscarPosList(lista,orden[aux]);
            printf("%2d veces\n",lista[posList].repeticiones);
        }
        cout<<endl<<"Esta zona suma "<<sumaZona(lista,cant*2+1,buscarPosList(lista,n)+1)<<" repeticiones"<<endl;
        printf("\nPresiona una tecla para seguir o ESCAPE para salir\n");
        seguir=getch();
        cout<<endl;
    }
}

int buscarPosList(tipoNumero lista[], int n)
{
    int posList;
    posList=-1;

    do
    {
        posList=posList+1;
    }while (lista[posList].numero!=n);
    return posList;
}

void guardar(tipoNumero lista[],int sitio)
{
    int i;
    ofstream escritura;
    if (sitio==1)
        escritura.open("lista.txt");
    else
        escritura.open("lista2.txt");
    escritura.clear();
    for(i=0;i<=36;i++)
    {
        escritura<<lista[i].numero<<endl;
        escritura<<lista[i].repeticiones<<endl;
    }
    escritura.close();
}

void borrar(tipoNumero lista[])
{
    int i;
    for (i=0;i<=36;i++)
        {
            lista[i].numero=i;
            lista[i].repeticiones=0;
        }
}

/*prototipos*/
int buscarPosList(tipoNumero[],int);
int buscarNumOrd(int);
int sumaZona(tipoNumero[],int,int);

void zonas(tipoNumero lista[]) /*Muestra la zona de numeros que suma mas repeticiones dando a elegir la cantidad de números a cada lado que se muestran*/
{
    int i,n,pos;
    pos=0;
    cout<<"Cantidad de numeros de la zona: ";
    cin>>n;
    while (n<1 || n>37)
    {
        cout<<"Cantidad de numeros incorecta, introduce otra: ";
        cin>>n;
        cout<<endl;
    }
    for(i=0;i<=37;i++)
    {
        if (sumaZona(lista,n,pos)<sumaZona(lista,n,i))
        {
            pos=i;
        }
    }
    cout<<endl<<"La zona con mas repeticiones es:"<<endl;
    for(i=0;i<n;i++)
    {
        if (pos+i>36)
            printf("Numero: %2d -------------- %2d veces\n",lista[buscarPosList(lista,buscarNumOrd(pos-37+i))].numero,lista[buscarPosList(lista,buscarNumOrd(pos-37+i))].repeticiones);
        else
            printf("Numero: %2d -------------- %2d veces\n",lista[buscarPosList(lista,buscarNumOrd(pos+i))].numero,lista[buscarPosList(lista,buscarNumOrd(pos+i))].repeticiones);
    }
    system("PAUSE");
}

/*prototipo*/
int buscarNumOrd(int);

int sumaZona(tipoNumero lista[],int n,int pos)  /*suma las repeticiones de n numeros empezando por el de posición pos*/
{
    int suma,i;
    suma=0;
    for(i=0;i<n;i++)
    {
        if (pos+i>36)
        {
            suma=suma+lista[buscarPosList(lista,buscarNumOrd(pos-37+i))].repeticiones;
        }
        else
            suma=suma+lista[buscarPosList(lista,buscarNumOrd(pos+i))].repeticiones;
    }
    return suma;
}

int buscarPosOrd(int n)  /*devuelve la posicion del numero n segun el orden de la ruleta real*/
{
    int orden[] = {0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26};
    int pos;
    pos=0;

    while (orden[pos]!=n)
        pos++;
    return pos;
}

int buscarNumOrd(int p)  /*devuelve el numero de posicion p segun el orden de la ruleta real*/
{
    int orden[] = {0,32,15,19,4,21,2,25,17,34,6,27,13,36,11,30,8,23,10,5,24,16,33,1,20,14,31,9,22,18,29,7,28,12,35,3,26};
    return orden[p];
}

int entradaNum()   /*control de entrada que devuelve un numero entero positivo o -1 si se presiona la tecla escape*/
{
    int aux,num,i;
    num=-1;
    for(i=0;i<=1;i++)
    {
        aux=getch();     /*getch() devuelve el numero correspondiente en ASCII de la tecla presionada*/
        while ((aux<48 || aux>57) && aux!=27 && aux!=13 && aux!=8)   /*48 equivale a 0, 57 equivale a 9, 27 equivale a la tecla escape, 13 a enter y 8 equivale a RETROCESO en ASCII*/
        {
            i=0;
            cout<<endl<<"No introduzcas cosas que no son numeros: ";
            aux=getch();
        }
        if (i==0)
        {
            if (aux!=13 && aux!=8)
            {
                num=10*(aux-48);
            }
            else
            {
                i=-1;
            }
        }
        else
        {
            if (aux==13)
                num=num/10;
            else
                if (aux!=8)
                    num=num+aux-48;
                else
                    num=-2;
        }
        if (aux==27)
        {
            num=-1;
            i=2;
        }
        else
            if (aux!=13 && aux!=8)
                cout<<aux-48;
    }
    while (aux!=27 && aux!=13 && aux!=8)
    {
        aux=getch();
        if (aux==27)
            num=-1;
        if (aux==8)
            num=-2;
    }

    return num;
}

void leerFichero(tipoNumero lista[], int sitio)  /*Lee los datos del fichero elegido y los introduce en la lista, en caso de que no este creado aun, lo crea*/
{
    int i;

    ifstream lectura;
    ofstream escritura;

    if (sitio==1)
        lectura.open("lista.txt");
    else
        lectura.open("lista2.txt");
    if (lectura.fail())
    {

        if(sitio==1)
        {
            cout<<"Creando archivo lista.txt"<<endl;
            escritura.open("lista.txt");
        }
        else
        {
            cout<<"Creando archivo lista2.txt"<<endl;
            escritura.open("lista2.txt");
        }
        for (i=0;i<=36;i++)
        {
            escritura<<i<<endl;
            escritura<<0<<endl;
        }
        escritura.close();
        if (sitio==1)
            lectura.open("lista.txt");
        else
            lectura.open("lista2.txt");
        system("PAUSE");
    }
    for (i=0;i<=36;i++)
    {
        lectura>>lista[i].numero;
        lectura>>lista[i].repeticiones;
    }
    lectura.close();
}

/*prototipo*/
void printMenu(int,int,string[],int,int);

int elegirOpcion(int numOpc,string m[],int cabecera,int casino)  /*Cambia de opción dependiendo de si pulsamos la tecla arriba o abajo, devuelve la opción al presionar ENTER*/
{
    int opc,tecla;

    opc=1;
    tecla=0;
    while (tecla!=13)       /*13 es el codigo ASCII para la tecla ENTER*/
    {
        printMenu(opc,numOpc,m,cabecera,casino);
        tecla=getch();
        if (tecla==72)           /*72 es el codigo ASCII para la tecla de direccion arriba*/
        {
            if (opc-1<1)
                opc=numOpc;
            else
                opc=opc-1;
        }
        if (tecla==80)           /*80 es el codigo ASCII para la tecla de direccion abajo*/
        {
            if (opc+1>numOpc)
                opc=opc-(numOpc-1);
            else
                opc=opc+1;
        }
    }
    return opc;
}

int pedirClave() /*pide una contraseña y en caso de ser erronea vuelve a pedirla*/
{
    int clave,i;

    i=0;
    cout<<"Introduzca la clave para poder abrir el programa"<<endl;
	cin>>clave;
	if (clave!=55555)
        while (clave!=55555 && i<3)
        {
            system("cls");
            textcolor(RED);
            cout<<"Clave incorrecta, no intente robar el programa!!"<<endl;
            textcolor(WHITE);
            cout<<"Te quedan "<<3-i<<" intentos: ";
            cin>>clave;
            i++;
        }
	if (clave==55555)
        return 0;
    else
    {
        system("cls");
        cout<<"No te quedan mas intentos, el programa va a cerrarse"<<endl<<endl;
        system("PAUSE");
        return 1;
    }
}
